# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4
    - name: 'Maven Build'
      uses: ctw04128/academy/.github/actions/maven_build@main
    - name: 'Maven Test'
      run: mvn test
      shell: bash
    - name: 'Docker Build'
      uses: ctw04128/academy/.github/actions/docker_build@main
      with:
        path_dockerfile: ./src/main/docker/Dockerfile.jvm
        image_name: ${{vars.DOCKERHUB_USERNAME}}/academy
        tag_name: v1
    - name: 'Docker Push'
      uses: ctw04128/academy/.github/actions/docker_push@main
      with:
        dockerhub_user: ${{ vars.DOCKERHUB_USERNAME }}
        dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}



    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
  #  - name: Update dependency graph
  #    uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
